#para atribuir a versão do deployment necessário rodar o comando abaixo para verificar qual é a versão permitida
kubectl api-resources

#aplicando este manifesto
kubectl apply -f ./service-clusterip/deployment.yaml

#rodando um container na mão em um ambiente kubernetes
kubectl run -i --tty --image=kubedevio/ubuntu-curl ping-test --restart='Never' --rm -- /bin/bash

#obtendo mais detalhes sobre o pod - pegar ip para efetuar teste de chamada interna pela rede
kubectl get pods -o wide

#rodar dentro do container com acesso ao curl para ver chamada responder
curl http://10.244.1.173:8080/temperatura/fahrenheitparacelsius/100

 ###################################################################################
 #para atribuir a versão do service necessário rodar o comando abaixo para verificar qual é a versão permitida
kubectl api-resources

# aplicar manifesto de service criado
kubectl apply -f ./service-clusterip/meuprimeiroservice.yaml

# rodando novamente o crul porém agora com o nome do serviço - 
curl http://api-service-cluster-ip/temperatura/fahrenheitparacelsius/100

# aumentando o número de replicas para fazer o teste no consumo da api
kubectl scale deployment api-conversao --replicas=20

# rodar o crul novamente e verificação que o nome da máquina muda a cada requisição
curl http://api-service/temperatura/fahrenheitparacelsius/100